= *Database change management* =
== Introduction ==

Tarantino Database change management provides a set of tools which make the process of propagating database schema and data changes to multiple environments frictionless.

===The problem that Database Change Management is attempting to solve:===
  * Most significant business applications rely on at least one relational database for persisting data
  * As new features are developed, database schema changes are often necessary – i.e. new tables, columns, views, and stored procedures
  * Database schema changes and corresponding code changes must always be deployed together 
  * While deploying software to a production environment, code files and libraries may usually be deleted or overwritten – Database files, however, must be intelligently manipulated so as not destroy vital business data

  The development tools available allow developers to make changes to their environement and do not address the problem of applying those changes to additional environments. (i.e. development, quality assurance, staging, production).

===The solution to this problem:===




== Details ==
 * The system is based on a set of conventions which allows incremental changes to a database schema.

The conventions are to 
Create
Update

{{{
		<manageSqlDatabase
			scriptDirectory="${database.script.directory}"
			action="${action}"
			server="${database.server}"
			integratedAuthentication="${database.integrated}"
			database="${database.name}"
			username="${database.username}"
			password="${database.password}"
		/>
}}}